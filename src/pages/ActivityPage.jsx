import React, { useState, useEffect } from 'react';
import { Cloud, Sun, CloudRain, Snowflake, MapPin, Grid, List, Star, Clock, Users } from 'lucide-react';
import LoadingSpinner from '../components/common/LoadingSpinner';
import ActivityCard from '../components/activity/ActivityCard';

const ActivityPage = ({weathers, mode}) => {
    const [weather, setWeather] = useState(null);
    const [location, setLocation] = useState('H√† N·ªôi');
    const [activities, setActivities] = useState([]);
    const [viewMode, setViewMode] = useState('grid'); // 'grid' cho 2 c·ªôt, 'list' cho 1 c·ªôt
    const [loading, setLoading] = useState(true);

    // D·ªØ li·ªáu m√¥ ph·ªèng t·ª´ ML API v√† web scraping
    const weatherBasedActivities = {
        sunny: [
            {
                id: 1,
                title: 'ƒêi d√£ ngo·∫°i t·∫°i C√¥ng vi√™n Th·ªëng Nh·∫•t',
                description: 'Th∆∞·ªüng th·ª©c kh√¥ng kh√≠ trong l√†nh v√† tham gia c√°c ho·∫°t ƒë·ªông ngo√†i tr·ªùi',
                rating: 4.8,
                duration: '2-3 gi·ªù',
                participants: '2-6 ng∆∞·ªùi',
                image: 'üèûÔ∏è',
                source: 'web_scraped',
                category: 'Ngo√†i tr·ªùi'
            },
            {
                id: 2,
                title: 'Ch∆°i th·ªÉ thao t·∫°i M·ªπ ƒê√¨nh',
                description: 'B√≥ng ƒë√°, c·∫ßu l√¥ng ho·∫∑c c√°c m√¥n th·ªÉ thao kh√°c',
                rating: 4.5,
                duration: '1-2 gi·ªù',
                participants: '4-10 ng∆∞·ªùi',
                image: '‚öΩ',
                source: 'ml_prediction',
                category: 'Th·ªÉ thao'
            },
            {
                id: 3,
                title: 'Tham quan Ho√†ng Th√†nh ThƒÉng Long',
                description: 'Kh√°m ph√° di s·∫£n vƒÉn h√≥a th·∫ø gi·ªõi t·∫°i H√† N·ªôi',
                rating: 4.7,
                duration: '3-4 gi·ªù',
                participants: '1-8 ng∆∞·ªùi',
                image: 'üèõÔ∏è',
                source: 'web_scraped',
                category: 'VƒÉn h√≥a'
            },
            {
                id: 4,
                title: 'ƒêi b∆°i t·∫°i Aqua Park',
                description: 'Gi·∫£i nhi·ªát trong ng√†y n·∫Øng n√≥ng',
                rating: 4.3,
                duration: '2-4 gi·ªù',
                participants: '2-8 ng∆∞·ªùi',
                image: 'üèä',
                source: 'ml_prediction',
                category: 'Gi·∫£i tr√≠'
            }
        ],
        rainy: [
            {
                id: 5,
                title: 'ThƒÉm B·∫£o t√†ng D√¢n t·ªôc h·ªçc',
                description: 'T√¨m hi·ªÉu vƒÉn h√≥a c√°c d√¢n t·ªôc Vi·ªát Nam',
                rating: 4.6,
                duration: '2-3 gi·ªù',
                participants: '1-6 ng∆∞·ªùi',
                image: 'üèõÔ∏è',
                source: 'web_scraped',
                category: 'VƒÉn h√≥a'
            },
            {
                id: 6,
                title: 'Xem phim t·∫°i CGV Vincom',
                description: 'Th∆∞·ªüng th·ª©c nh·ªØng b·ªô phim m·ªõi nh·∫•t',
                rating: 4.4,
                duration: '2-3 gi·ªù',
                participants: '2-4 ng∆∞·ªùi',
                image: 'üé¨',
                source: 'ml_prediction',
                category: 'Gi·∫£i tr√≠'
            },
            {
                id: 7,
                title: 'Mua s·∫Øm t·∫°i Tr√†ng Ti·ªÅn Plaza',
                description: 'Shopping v√† th∆∞·ªüng th·ª©c ·∫©m th·ª±c trong nh√†',
                rating: 4.2,
                duration: '3-5 gi·ªù',
                participants: '2-6 ng∆∞·ªùi',
                image: 'üõçÔ∏è',
                source: 'web_scraped',
                category: 'Mua s·∫Øm'
            },
            {
                id: 8,
                title: 'H·ªçc n·∫•u ƒÉn t·∫°i Vietnam Cookery',
                description: 'H·ªçc c√°ch n·∫•u c√°c m√≥n ƒÉn truy·ªÅn th·ªëng Vi·ªát Nam',
                rating: 4.9,
                duration: '3-4 gi·ªù',
                participants: '2-8 ng∆∞·ªùi',
                image: 'üë®‚Äçüç≥',
                source: 'ml_prediction',
                category: 'H·ªçc t·∫≠p'
            }
        ],
        cloudy: [
            {
                id: 9,
                title: 'ƒêi caf√© t·∫°i Ph·ªë c·ªï',
                description: 'Th∆∞·ªüng th·ª©c c√† ph√™ v√† kh√¥ng kh√≠ c·ªï k√≠nh',
                rating: 4.7,
                duration: '1-2 gi·ªù',
                participants: '2-4 ng∆∞·ªùi',
                image: '‚òï',
                source: 'web_scraped',
                category: 'Th∆∞ gi√£n'
            },
            {
                id: 10,
                title: 'Tham quan VƒÉn Mi·∫øu',
                description: 'Kh√°m ph√° ng√¥i tr∆∞·ªùng ƒë·∫°i h·ªçc ƒë·∫ßu ti√™n c·ªßa Vi·ªát Nam',
                rating: 4.8,
                duration: '2-3 gi·ªù',
                participants: '1-8 ng∆∞·ªùi',
                image: 'üèÆ',
                source: 'ml_prediction',
                category: 'VƒÉn h√≥a'
            },
            {
                id: 11,
                title: 'Ch·ª•p ·∫£nh t·∫°i C·∫ßu Long Bi√™n',
                description: 'Ghi l·∫°i nh·ªØng kho·∫£nh kh·∫Øc ƒë·∫πp c·ªßa th√†nh ph·ªë',
                rating: 4.5,
                duration: '1-3 gi·ªù',
                participants: '1-4 ng∆∞·ªùi',
                image: 'üì∏',
                source: 'web_scraped',
                category: 'Ngh·ªá thu·∫≠t'
            },
            {
                id: 12,
                title: 'Tham quan Gallery L\'Espace',
                description: 'Chi√™m ng∆∞·ª°ng c√°c t√°c ph·∫©m ngh·ªá thu·∫≠t ƒë∆∞∆°ng ƒë·∫°i',
                rating: 4.4,
                duration: '1-2 gi·ªù',
                participants: '1-6 ng∆∞·ªùi',
                image: 'üé®',
                source: 'ml_prediction',
                category: 'Ngh·ªá thu·∫≠t'
            }
        ]
    };

    const weatherIcons = {
        sunny: <Sun className="w-6 h-6 text-yellow-500" />,
        rainy: <CloudRain className="w-6 h-6 text-blue-500" />,
        cloudy: <Cloud className="w-6 h-6 text-gray-500" />,
        cold: <Snowflake className="w-6 h-6 text-blue-300" />
    };

    const weatherNames = {
        sunny: 'N·∫Øng ƒë·∫πp',
        rainy: 'M∆∞a',
        cloudy: 'Nhi·ªÅu m√¢y',
        cold: 'L·∫°nh'
    };

    useEffect(() => {
        // M√¥ ph·ªèng API call ƒë·∫øn OpenWeather v√† ML service
        const simulateAPICall = async () => {
            setLoading(true);
            
            // Gi·∫£ l·∫≠p delay API
            await new Promise(resolve => setTimeout(resolve, 1500));
            
            // M√¥ ph·ªèng d·ªØ li·ªáu t·ª´ OpenWeather API
            const mockWeatherConditions = ['sunny', 'rainy', 'cloudy'];
            const randomWeather = mockWeatherConditions[Math.floor(Math.random() * mockWeatherConditions.length)];
            
            setWeather(randomWeather);
            setActivities(weatherBasedActivities[randomWeather]);
            setLoading(false);
            setViewMode(mode);
        };

        simulateAPICall();
    }, []);

    

    if (loading) {
        return (
            <LoadingSpinner text='ƒêang ph√¢n t√≠ch th·ªùi ti·∫øt v√† t·∫°o ƒë·ªÅ xu·∫•t...'/>
        );
    }

    return (
        <div className="min-h-screen bg-white/10 backdrop-blur-md rounded-2xl text-white">
            <div className="container mx-auto px-4 py-8">
                {/* Weather & Location Info */}
                <div className="bg-white/10 rounded-xl shadow-lg p-6 mb-8">
                    <div className="flex items-center justify-between flex-wrap gap-4">
                        <div className="flex items-center space-x-4">
                            <div className="flex items-center space-x-2">
                                <MapPin className="w-5 h-5 text-blue-600" />
                                <span className="font-semibold text-white">{location}</span>
                            </div>
                            <div className="flex items-center space-x-2">
                                {weatherIcons[weather]}
                                <span className="font-medium text-white">
                                    {weatherNames[weather]}
                                </span>
                            </div>
                        </div>
                    </div>
                </div>

                {/* Activities Grid/List */}
                <div className={`grid gap-6 ${
                    viewMode === 'grid' 
                        ? 'grid-cols-1 md:grid-cols-2' 
                        : 'grid-cols-1'
                }`}>
                    {activities.map((activity) => (
                        <ActivityCard 
                            key={activity.id} 
                            activity={activity} 
                            isGridView={viewMode === 'grid'} 
                        />
                    ))}
                </div>
            </div>
        </div>
    );
};

export default ActivityPage;